name: "Terraform Actions on PR"
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  ARTIFACT_REGISTRY: portfolio-docker
  SERVICE: flask-me
  REGION: us-east1

on:
  pull_request:
    types: [opened,closed]
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform_plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform init
        working-directory: ./deploy/terraform/gcp
        run: terraform init \
          -backend-config="bucket=flask-me-367906-bucket-tfstate" \

      - name: Terraform plan
        working-directory: ./deploy/terraform/gcp
        run: terraform plan \
          -var "PROJECT_ID=${{ env.PROJECT_ID }}" \
          -var "LOCATION=us-east1" \
          -var "ARTIFACT_REPOSITORY=${{ env.ARTIFACT_REPOSITORY }}" \

      - uses: robburger/terraform-pr-commenter@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commenter_type: plan 
          commenter_input: ${{ format('{0}{1}', steps.step_id.outputs.stdout, steps.step_id.outputs.stderr) }}
          commenter_exitcode: ${{ steps.step_id.outputs.exitcode }}
  
  pr_approved:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform init
        working-directory: ./deploy/terraform/gcp
        run: terraform init \
          -backend-config="bucket=flask-me-367906-bucket-tfstate" \
          -backend-config="prefix=terraform/state"
      
      - name: Terraform plan
        working-directory: ./deploy/terraform/gcp
        run: terraform apply \
          -var "PROJECT_ID=${{ env.PROJECT_ID }}" \
          -var "LOCATION=us-east1" \
          -var "ARTIFACT_REPOSITORY=${{ env.ARTIFACT_REPOSITORY }}" \
          -auto-approve