name: "Terraform Actions on PR"
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  ARTIFACT_REPOSITORY: portfolio-docker
  SERVICE: flask-me
  REGION: us-east1

on:
  pull_request:
    types: [opened,closed,reopened,edited,synchronize]
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform_plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      # Setup gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1


      - name : Terraform Setup
        uses: hashicorp/setup-terraform@v2

      - name: Terraform init
        working-directory: ./deploy/terraform/gcp
        run: |- 
          terraform init \
          -backend-config='bucket=flask-me-367906-bucket-tfstate' \
          -backend-config='prefix=terraform/state'

      - name: Terraform plan
        id: plan
        working-directory: ./deploy/terraform/gcp
        run: |-
          terraform plan \
          -var 'PROJECT_ID=${{ env.PROJECT_ID }}' \
          -var 'LOCATION=us-east1' \
          -var 'ARTIFACT_REPOSITORY=${{ env.ARTIFACT_REPOSITORY }}' \
          -out 'tfplan'

      - uses: robburger/terraform-pr-commenter@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commenter_type: plan 
          commenter_input: ${{ format('{0}{1}', steps.plan.outputs.stdout, steps.plan.outputs.stderr) }}
          commenter_exitcode: ${{ steps.plan.outputs.exitcode }}
  
  pr_approved:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      # Setup gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1


      - name : Terraform Setup
        uses: hashicorp/setup-terraform@v2

      - name: Terraform init
        working-directory: ./deploy/terraform/gcp
        run: |- 
          terraform init \
          -backend-config='bucket=flask-me-367906-bucket-tfstate' \
          -backend-config='prefix=terraform/state'
      
      - name: Terraform Apply
        working-directory: ./deploy/terraform/gcp
        run: |-
          terraform apply \
          -var 'PROJECT_ID=${{ env.PROJECT_ID }}' \
          -var 'LOCATION=us-east1' \
          -var 'ARTIFACT_REPOSITORY=${{ env.ARTIFACT_REPOSITORY }}' \
          -auto-approve