name: Build and Deploy to Cloud Run
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  ARTIFACT_REGISTRY: portfolio-docker
  SERVICE: flask-me
  REGION: us-east1

on:
  push:
    branches:
    - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    # Setup gcloud CLI
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    # Run Terraform
    - name: Terraform init
      working-directory: ./deploy/terraform/gcp
      run: terraform init \
        -backend-config="bucket=${{ env.PROJECT_ID }}-bucket-tfstate" \
        -backend-config="prefix=terraform/state"

    - name: Terraform plan
      working-directory: ./deploy/terraform/gcp
      run: terraform plan \
        -var "PROJECT_ID=${{ env.PROJECT_ID }}" \
        -var "LOCATION=us-east1" \
        -var "ARTIFACT_REPOSITORY=${{ env.ARTIFACT_REPOSITORY }}" \

    - uses: robburger/terraform-pr-commenter@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        commenter_type: plan 
        commenter_input: ${{ format('{0}{1}', steps.step_id.outputs.stdout, steps.step_id.outputs.stderr) }}
        commenter_exitcode: ${{ steps.step_id.outputs.exitcode }}

    - name: Authorize Docker push
      run: gcloud auth configure-docker

    - name: Build and Push Container
      run: |-
        docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} .
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}

    - name: Deploy to Cloud Run
      run: |-
        gcloud run deploy ${{ env.SERVICE }} \
          --region ${{ env.REGION }} \
          --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} \
          --platform "managed" \
          --quiet
